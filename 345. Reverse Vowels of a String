class Solution {
    public String reverseVowels(String s) {
        if(s == null) {
            return "";
        }
        int left = 0;
        int right = s.length() - 1;
        char[] c = s.toCharArray();
        while(left < right) {
            while(left < s.length() && !isVowel(c[left])){
                left++;
            }
            while(right >= 0 && !isVowel(c[right])) {
                right--;
            }
            if(left >= right) {
                break;
            }
            swap(c, left, right);
            left++;
            right--;
        }
        return new String(c);

    }
    private void swap(char[] arr, int i, int j) {
        char temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }
    private boolean isVowel(char ch) {
        return ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u'
                ||ch=='A'|| ch == 'E' || ch == 'I' || ch == 'O' || ch == 'U';
    }
}
// 时间复杂度O(n) 空间复杂度O(n)
