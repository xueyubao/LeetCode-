class Solution {
    public int subarraysDivByK(int[] A, int K) {
        Map<Integer,Integer> map = new HashMap<>();
        map.put(0, 1);
        int sum = 0;
        int res = 0;
        for(int item : A) {
            sum += item;
            int modulus = (sum % K + K) % K;
            int same = map.getOrDefault(modulus, 0);
            res += same;
            map.put(modulus, same + 1);
        }
        return res;

    }
}
https://leetcode-cn.com/problems/subarray-sums-divisible-by-k/solution/he-ke-bei-k-zheng-chu-de-zi-shu-zu-by-leetcode-sol/

class Solution {
    public int subarraysDivByK(int[] A, int K) {
        Map<Integer,Integer> map = new HashMap<>();
        map.put(0, 1);
        int sum = 0;
        for(int item : A) {
            sum += item;
            int modulus = (sum % K + K) % K;
            map.put(modulus, map.getOrDefault(modulus, 0) + 1);
        }
        int res = 0;
        for(Map.Entry<Integer,Integer> entry : map.entrySet()) {
            res += entry.getValue() * (entry.getValue() - 1) / 2;
        }
        return res;

    }
}

