class Solution {
    public int minSubArrayLen(int s, int[] nums) {
        int left = 0;
        int right = 0;
        int sum = 0;
        int min = 0;
        while(right < nums.length) {
            sum = sum + nums[right++];
            if(sum >= s) {
                while(sum >= s) {
                    sum = sum - nums[left++];
                }
                int temp = right - left + 1;
                if(min == 0 || temp < min) {
                    min = temp;
                }
            }
            
        }
        return min;

    }
}
// 设置双指针都是从index为0的位置开始 终止条件为快指针将数组遍历完成。
// 当累加快指针遍历到的元素，当它大于或者等于给定的s时，开始移动慢指针
// 让sum累减慢指针对应的数值。并且在此过程中更新min的值
